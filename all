Linux 学习笔记

常用命令
1.	yum 安装程序包
		-y：取消安装过程中的确认
	#yum install -y tree
		安装tree命令
		ntpdate		网络时间
		lrzsz
		nmap
		dos2unix
		telnet
		sysstat
		screen
		httpd		web服务
	#yum update
		更新所有程序包，相当于windows update
	#yum groupinstall "Base" "Compatibility libraries" "Debugging tools" "Development tools"
		如果安装过程中没选择组件，可以进入系统后通过yum命令安装
	#yum grouplist:
	Installed Groups:
	   Base
	   Compatibility libraries
	   Debugging Tools
	   Development tools
	   E-mail server
	   Graphical Administration Tools
	   Hardware monitoring utilities
	   Legacy UNIX compatibility
	   Networking Tools
	   Performance Tools
	   Perl Support
	   Scientific support
	   Security Tools

2.	cd 进入目录（Change directory）
	Usage: cd [dir]
	路径：
	相对路径：不从/根开始
	绝对路径：从/根开始
		/ 		为根目录
		~ 		为用户家目录
		. 		为本目录
		..		为上一级目录
		../.. 	为上一级的上一级目录
		-		为上一次目录（$OLDPWD）
	#cd /data
		进入根目录下的data目录
	#cd -
		回到上一次所在目录

3.	alias 系统别名的查看及修改
	#alias
		查看系统现有别名
	#alias cp='cp -i'
		添加一条别名，使用cp命令默认带-i参数
	#unalias cp
		删除cp的别名
	#alias rm='echo This command is not allowed to use.'
		添加一条别名，使用rm命令时显示该命令禁止使用
	#source ~/.bashrc
		读取文件恢复内存中别名默认设置

4.	LANG 设置系统语言
	#LANG=en
		设置系统语言为英文
	#LANG="en_US.UTF-8"
		设置系统语言为英文
	#echo $LANG
		显示现在系统语言
	#echo "LANG=zh_CN.UTF-8" > /etc/sysconfig/i18n
		将语言设置为中文字符集并修改进配置文件
	#source /etc/sysconfig/i18n
		从配置文件中恢复语言设置

5.	ifconfig 查看网络配置
	#ifconfig
		查看当前网络配置，类似windows中的ipconfig
	#ip add
		查看所有网卡信息，与ifconfig类似
	#ifconfig | sed -n "2p"
        inet 192.168.137.188  netmask 255.255.255.0  broadcast 192.168.137.255
		查看并提取ip地址相关信息（显示第二行）

6.	ifup 启用网卡
	#ifdown ens32
	#ifup ens32
		相当于禁用网卡再启动
	#ifdown ens32 && ifup ens32
		重启ens32这块网卡，比service network restart好在不影响其他网卡

7.	service network restart 重启网络服务
	#service network restart
		重启网络服务

8.	nmcli conn 查看网卡的UUID
	#nmcli conn
	NAME   UUID                                  TYPE      DEVICE
	ens32  0b3d9154-8a08-4bd9-aee9-26e124dedaf0  ethernet  ens32
	ens34  95044a39-6fb1-3963-8a9f-cd8403e79348  ethernet  ens34
		查看所有网卡的UUID

9.	route 来显示并设置网络路由表
		-A 设置地址类型
		-C 打印将Linux核心的路由缓存
		-v 详细信息模式
		-n 不执行DNS反向查找，直接显示数字形式的IP地址
		-e netstat格式显示路由表
		-net 到一个网络的路由表
		-host 到一个主机的路由表
		Add 增加指定的路由记录
		Del 删除指定的路由记录
		Target 目的网络或目的主机
		gw 设置默认网关
		mss 设置TCP的最大区块长度（MSS），单位MB
		window 指定通过路由表的TCP连接的TCP窗口大小
		dev 路由记录所表示的网络接口
	#route -n
		查看路由表
		route(选项)(参数)

11.	vi/vim 文本编辑器（Visual editor/Visual editor improved）
		a i o 进入编辑模式
		ESC 退出编辑模式
		dd 命令行模式删除当前行
		yy 复制当前行
		p 粘贴复制行
		G :$ ]] 光标移动到文件最后一行
		gg :0 [[ 光标移动到文件第一行
		0 ^ home 光标移动到行首
		$ end 光标移动到行尾
		u 撤销
		/ 向下搜索，继续搜索n，反向搜索N
		? 向上搜索，继续搜索n，反向搜索N
		set nu 显示行号
		:w 保存（write）
		:q 退出（quit）
		:wq :x 保存退出
		:wq! 保存并强制退出
	#vi /etc/sysconfig/network-scripts/ifcfg-ens32
		编辑网卡配置文件


13.	mkdir 创建目录（Make directory）
	Usage: mkdir [OPTION]... DIRECTORY...
		-p 忽略报错/递归，连续创建目录
		-v 显示创建目录的结果或过程
	#mkdir /data
		根目录下创建data文件夹
	#mkdir data
		该目录下创建data文件夹
	#mkdir -p /data/K/test1/ /data/K/test2
		依次在根目录下创建data，在data下创建K，在K下创建test1和test2目录

14.	pwd 查看当前目录路径（Print working directory）
		-L 显示路径，默认参数
		-P 显示物理路径，忽略快捷方式
	#pwd
		查看当前目录路径，相当于echo $PWD

15.	touch 创建文件或更新时间戳
	Usage: touch [OPTION]... FILE...
		创建文件不需要参数
		-a 只改变访问时间
		-m 只改变修改时间
	#touch /data/k.txt
		在根目录的data目录下创建k.txt文件，如该文件存在，只更新时间
	#touch /data/K/test1/test{1..20}.txt
		在/data/K/test1目录下创建test1.txt、test2.txt、test3.txt、...、test20.txt，{}为序列
	#stat /data/k.txt
		查看/data/k.txt的文件属性

16.	rm 删除文件或文件夹（ReMove）
		-f 强制删除 （Force）
		-r 删除目录 （Recursive）
		-i 删除前提示
	#rm -f /data/K/test1/*
		删除/data/K/test1目录下所有文件
	★★★该命令无法撤销无法恢复，操作前请确认并备份★★★
	建议如果非必要，使用mv命令移动到/tmp/目录
	如果非要删除，建议cd进入当前目录，使用find . -type f(d) -name "" | xargs rm -i删除，进入当前路径，避免删错

17.	echo 打印/输出
		-e 激活转义字符
		\n 回车
		\t TAB锁进
		-n 不换行输出
	#echo 'Hello world!!' >/data/k.txt
		将Hello world!!输出到/data/k.txt中，如果没有该文件则创建，存在该文件则覆盖其中内容
	#echo 'This is the last line.' >>/data/a.txt
		将This is the last line.追加到/data/a.txt中，如果没有该文件则创建
	★★★该命令无法撤销无法恢复，操作前请确认并备份★★★
	#echo -e "\e[1;31mThis is red text\e[0m"
		输出红色文字This is red text，\e[1;31m为设置字体颜色为红色，\e[0m为重置字体颜色
		字体颜色码：重置=0，黑色=30，红色=31，绿色=32，黄色=33，蓝色=34，洋红=35，青色=36，白色=37
		背景颜色码：重置=0，黑色=40，红色=41，绿色=42，黄色=43，蓝色=44，洋红=45，青色=46，白色=47

18.	clear 清屏
	#clear
		清屏，相当于快捷键Ctrl+l

19.	tr 替换
	#echo 1 2 3 4 >/data/k.txt
	#tr ' ' '\n' </data/k.txt
	1
	2
	3
	4
		将/data/k.txt中的空格替换成换行，内容并未写入k.txt中，只是将输出结果替换

20.	tree 树命令，查看目录结构
	Usage: tree [OPTION]... DIRECTORY...
		-a 显示所有文件，包括隐藏文件（Linux中以.开头的文件即隐藏文件）
		-d 只显示目录，不显示文件
		-L 显示目录层级 Layer（-L n）
		-f 为每一个文件显示完整的路径
		-i 不显示树枝，只显示文件或文件夹名（-i一般情况下与-f参数一起使用）
		-F 区分文件及文件夹，文件夹后有/
	#tree -L 2
		显示本目录的目录结构，只显示2层目录
	#tree -fi /data
		显示/data目录下所有文件的完整路径

21.	uname 打印系统信息
	Usage: uname [OPTION]...
		-m 查看系统位数
		-n 显示主机名
		-r 查看kernel版本
		-a 查看全部信息
	#uname -r
		查看kernel内核版本，3.10.0-862.6.3.el7.x86_64
	#uname -m
		查看32位还是64位，x86_64
	#uname -a
	Linux KS-CENTOS7 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
		查看系统全部信息
	#cat /etc/redhat-release
		查看系统版本信息，CentOS Linux release 7.5.1804 (Core)

22.	hostname 显示和设置主机名，默认是显示主机名
	#hostname
		显示主机名
	#hostname KS
		临时设置主机名

23.	useradd 添加用户（create a new user or update default new user information）
	Usage: useradd [options] LOGIN
	选项：
		-c 注释
		-d 家目录
		-e 终止日期
		-g 指定属于的主组，使用该命令不创建用户名为组名的用户组
		-G 指定多组，用","隔开
		-M 创建时不建家目录
		-s 指定shell
		-u 指定uid
	[root@Ks-CentOS-6 test]# useradd ks -g kshome
	#创建一个用户ks，让其默认在kshome用户组中

	[root@Ks-CentOS-6 ~]# useradd -c "TestUserAdd" -u 806 -G root,sa -s /bin/sh -md /testuser testuseradd
	[root@Ks-CentOS-6 ~]# tail -1 /etc/passwd
	testuseradd:x:806:806:TestUserAdd:/testuser:/bin/sh
	#创建用户testuseradd，使其注释为TestUserAdd，uid为806，所属用户组为root和sa，指定登录shell为/bin/sh，家目录为/testuser

	[root@Ks-CentOS-6 ~]# useradd -g kshome -M -e "2028/01/01" lian
	#创建用户lian，并不创建用户组lian，让该用户属于kshome，不设置家目录，让其2028年1月1日过期

24.	userdel 删除用户（delete a user account and related files）
	Usage: userdel [options] LOGIN
	选项：
		-r 删除家目录
	[root@Ks-CentOS-6 ~]# userdel -r testuser
	#删除testuser，并删除其家目录

24.	passwd 设置或改密码（update user’s authentication tokens）
	Usage: passwd [options] [username]
	选项：
		-n 几天内不能修改密码（min）
		-x 原密码过期，即几天内必须修改密码（max）
		-w 密码还差几天过期时提示该用户修改密码（warning）
		-i 密码过期后多少天后禁用用户登录（inactive）
		--stdin 非交互式修改密码
	注意：
		1.	passwd命令，即/usr/bin/passwd文件，拥有特殊权限，即其他用户执行时拥有该用户属主的权限
			[root@Ks-CentOS-6 ~]# ll `which passwd`
			-rwsr-xr-x. 1 root root 30768 Nov 24  2015 /usr/bin/passwd
		2.	生产环境，用户及密码管理
				密码要尽量复杂
				大企业用户和密码统一管理，openldap活动目录账户集中管理
					一堆服务器，登录时先登录认证服务器，认证服务器去连该服务器认证，认证后登录
				动态口令
	[root@Ks-CentOS-6 ~]# passwd ks
	Changing password for user ks.
	New password:
	Retype new password:
	passwd: all authentication tokens updated successfully.
	#root用户给ks创建密码

	[root@Ks-CentOS-6 ~]# passwd -n 3 -x 90 -w 15 -i 30 cc
	Adjusting aging data for user cc.
	passwd: Success
	[root@Ks-CentOS-6 ~]# chage -l cc
	Last password change                                    : Jul 30, 2018
	Password expires                                        : Oct 28, 2018
	Password inactive                                       : Nov 27, 2018
	Account expires                                         : never
	Minimum number of days between password change          : 3
	Maximum number of days between password change          : 90
	Number of days of warning before password expires       : 15
	#设置用户cc，3天内不能修改密码，90天内原密码到期，到期15天前提醒该用户修改密码，到期30天后不能登录

	[ks@Ks-CentOS-6 ~]$ passwd
	Changing password for user ks.
	Changing password for ks.
	(current) UNIX password:
	New password:
	Retype new password:
	passwd: all authentication tokens updated successfully.
	#ks用户给自己改密码

	[root@Ks-CentOS-6 ~]# echo "qwert123" | passwd --stdin ks
	Changing password for user ks.
	passwd: all authentication tokens updated successfully.
	#通过命令非交互式修改密码（非交互式，只可以root操作）

25.	su 切换用户
	Usage: su [options] - [USER [arg]...]


26.	whoami 打印当前用户
	#whoami
		查看当前用户，相当于id -un

27.	ps 进程查看命令
	Usage: ps [options]
		-A 查看所有进程，同-e
		-e 查看所有进程，同-A
		-f 生成完整输出
	#ps -l
	F S   UID    PID   PPID  C PRI  NI ADDR SZ WCHAN  TTY          TIME CMD
	4 S     0   1423   1419  0  80   0 - 28858 do_wai pts/0    00:00:00 bash
	0 R     0   1460   1423  0  80   0 - 38300 -      pts/0    00:00:00 ps
		将目前属于本用户这次登入的PID与相关信息列示出来
		F 		代表这个程序的旗标 (flag)， 4 代表使用者为 superuser
		S 		代表这个程序的状态 (STAT)
		UID		代表执行者身份
		PID		进程的ID号
		PPID 	父进程的ID
		C 		CPU使用的资源百分比
		PRI 	指进程的执行优先权(Priority的简写)，其值越小越早被执行
		NI 		这个进程的nice值，其表示进程可被执行的优先级的修正数值
		ADDR 	这个是内核函数，指出该程序在内存的哪个部分。如果是执行的程序，一般就是“-”
		SZ 		使用掉的内存大小
		WCHAN 	目前这个程序是否正在运行当中，若为“-”表示正在运行
		TTY 	登入者的终端机位置
		TIME 	使用掉的 CPU 时间
		CMD 	所下达的指令名称
	#ps aux
	USER        PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
	root          1  0.2  0.6 128396  6968 ?        Ss   20:07   0:01 /usr/lib/systemd/systemd
	root          2  0.0  0.0      0     0 ?        S    20:07   0:00 [kthreadd]
	......
		列出目前所有的正在内存当中的程序
		USER：该进程属于那个使用者账号
		PID ：该进程的进程ID号
		%CPU：该进程使用掉的 CPU 资源百分比
		%MEM：该进程所占用的物理内存百分比
		VSZ ：该进程使用掉的虚拟内存量 (Kbytes)
		RSS ：该进程占用的固定的内存量 (Kbytes)
		TTY ：该进程是在那个终端机上面运作，若与终端机无关，则显示“?”
			  另外，“tty1-tty6” 是本机上面的登入者程序，若为“pts/0”等等的，则表示为由网络连接进主机的程序。
		STAT：该程序目前的状态，主要的状态有：
				R ：该程序目前正在运作，或者是可被运作
				S ：该程序目前正在睡眠当中，但可被某些讯号(signal) 唤醒
				T ：该程序目前正在侦测或者是停止了
				Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (僵尸) 程序的状态
		START：该进程被触发启动的时间
		TIME ：该进程实际使用 CPU 运作的时间
		COMMAND：该程序的实际指令
	#ps -ef | grep ssh
		查看有关ssh的进程

28.	netstat 显示各种网络相关信息
		-a (all)显示所有选项，默认不显示LISTEN相关
		-l 仅列出有在 Listen (监听) 的服务状态
		-n 拒绝显示别名，能显示数字的全部转化成数字
		-t (tcp)仅显示tcp相关选项
		-u (udp)仅显示udp相关选项
		-p 显示建立相关链接的程序名
		-r 显示路由信息，路由表
		-e 显示扩展信息，例如uid等
		-s 按各个协议进行统计
		-c 每隔一个固定时间，执行该netstat命令
	#netstat -lntup | grep ssh
		查看所有正在监听的tcp、udp所有关于ssh的进程，并显示数字代替别名，且显示建立相关链接的程序名
	#netstat -an | grep 192
		查看所有连接信息中包括192的信息（一般情况下用他来表示局域网内连接信息，前提是局域网ip地址以192开头）

29.	systemctl 系统服务管理器指令，它实际上将 service 和 chkconfig 这两个命令组合到一起
	Usage: systemctl [OPTIONS...] {COMMAND} ...
		start 启动服务
		stop 关闭服务
		enable 设置开机自启动
		disable 停止开机自启动
		restart 重启服务
		reload 从新加载配置
		mask 冻结服务
		unmask 解冻服务
		status 查看服务状态
	#systemctl stop firewalld.service
		关闭防火墙（CentOS 7+），CentOS 6及以前使用/etc/init.d/iptables stop
	#systemctl status firewalld.service
		查看防火墙进程（CentOS 7+），CentOS 6及以前使用/etc/init.d/iptables status
	#systemctl list-unit-files | grep firewalld.service
		查看防火墙自启状态（CentOS 7+）
	#systemctl disable firewalld.service
	Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
	Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
		永久关闭防火墙，即关闭自启动（CentOS 7），CentOS 6及以前用chkconfig iptables off
	#systemctl restart sshd.service
		重启ssh服务（CentOS 7+），CentOS 6及以前使用/etc/init.d/sshd restart
	#systemctl restart network.service
		重启网络设置，相当于没有返回值的service network restart
		因该命令影响所有网卡，生产环境建议使用#ifdown ens32 && ifup ens32，这样只针对单独网卡（&&表示前面命令正确执行后运行后面命令）
	#systemctl list-units
		列出当前系统服务的状态
	#systemctl list-unit-files
		列出服务的开机状态
	#systemctl status network.service | grep Active:
		只显示网络设置中的Active那一行信息
			loaded				系统服务已经初始化完成，加载过配置
			active（running）	正有一个或多个程序正在系统中执行，vsftpd就是这种模式
			atcive（exited）	仅执行一次就正常结束的服务，目前并没有任何程序在系统中执行
			atcive（waiting）	正在执行当中，不过还在等待其他事件才能继续处理
			inactive			服务关闭
			enbaled				服务开机启动
			disabled			服务开机不自启
			static				服务开机启动项不可被管理
			failed				系统配置错误

30.	telnet 明文登录、管理远程主机
	Usage: telnet [OPTIONS...] [host-name [port]]
	#telnet 192.168.31.88 22
		telnet命令测试22端口

31.	lrzsz 一个unix通信套件提供的X，Y，和ZModem文件传输协议
	#yum install -y lrzsz
		安装lrzsz
	#rz
		上传文件到服务器当前目录
	#sz filename
		下载filename到本地默认下载目录，SecureCRT可以在选项--全局选项--文件传输--选项中设置默认上传及下载路径

32.	shutdown 关机/重启（仅限root用户，比较安全的关机或重启方法）
	Usage: shutdown [OPTIONS...] [TIME] [WALL...]
		-h 关机
		-r 重启
		-c 取消关机/重启倒计时
	#shutdown -h now
		现在关机
	#shutdown -r now
		现在重启
	其他关机命令：
	#halt
	#poweroff
	#init 0
	其他重启命令：
	#reboot
	#init 6

33.	history 历史
	#history
		查看输入命令的历史
	#history -c
		清除所有历史命令
	#history -d n
		清除第n条历史命令
	#!n
		重新调用第n条历史命令
	#!x
		上一条以x字母开头的历史命令
	#cat ~/.bash_history
		查看历史记录文件
	#export HISTSIZE=20
		命令行历史记录数量（临时生效，永久生效 ehco 'export HISTSIZE=20' >>/etc/profile，然后source /etc/profile）
	#export HISTFILESIZE=100
		命令行历史文件的记录数量~/.bash_history（临时生效,永久生效 ehco 'export HISTFILESIZE=100' >>/etc/profile，然后source /etc/profile）

34.	hostname 主机名
	#hostname
		查看主机名
	#hostname TestVM1
		设置当前主机名，立即生效
	#hostnamectl set-hostname TestVM1
		永久设置主机名为TestVM1并立即生效（CentOS 7+）
	#vim /etc/sysconfig/network
		编辑network文件修改hostname行，重启生效（CentOS 6及以前版本）

35.	mount 挂载，所有新接入设备如果不挂载就不能被Linux访问

	#mount /dev/cdrom /mnt/cdrom
		将CDROM挂在到/mnt/cdrom目录了
	#df -h
	Filesystem      Size  Used Avail Use% Mounted on
	/dev/sda3        18G  1.4G   17G   8% /
	devtmpfs        479M     0  479M   0% /dev
	tmpfs           489M     0  489M   0% /dev/shm
	tmpfs           489M  6.6M  482M   2% /run
	tmpfs           489M     0  489M   0% /sys/fs/cgroup
	/dev/sda1       197M   98M  100M  50% /boot
	tmpfs            98M     0   98M   0% /run/user/1000
	/dev/sr0        4.3G  4.3G     0 100% /mnt/cdrom
		查看所有挂载设备
	#cat /etc/fstab
		查看系统默认挂载点
	#fdisk -l
		查看硬盘分区

36.	blkid 查看磁盘UUID（只能root用户）
	#blkid
	/dev/sr0: UUID="2017-09-06-10-51-00-00" LABEL="CentOS 7 x86_64" TYPE="iso9660" PTTYPE="dos"
	/dev/sda1: UUID="111da2b8-ef17-448c-ac9a-12ec8b94dbc5" TYPE="xfs"
	/dev/sda2: UUID="fd84ea2c-60c1-4340-bdc0-3a1766de7582" TYPE="swap"
	/dev/sda3: UUID="87f479e2-fdc4-49be-b1f9-a0e95107b0aa" TYPE="xfs"
		查看所有磁盘设备（分区）的UUID

37.	cp 复制拷贝文件或目录（CoPy）
	Usage: cp [OPTION...] SOURCE... DIRECTORY
		-a 递归复制并保留其属性，包括链接，-dpr
		-d 复制链接属性 （no Dereference）
		-p 保留源文件或目录的属性 （Preserve the specified attributes）
		-r 递归，复制目录需要加（recursive）
		-f 强行复制文件或目录，不论目标文件或目录是否已存在 （force）
		-i 覆盖既有文件之前先询问用户（默认状态下，-i是写进cp别名中的，也就是默认带该属性，可用\CP命令忽略-i属性） （Interactive: prompt before overwrite）
		-u 只有源文件比目标文件更新或目标文件不存在才复制
		-b 覆盖已存在的文件目标前将目标文件备份
		-v 详细显示命令执行的操作
	#cp /data/k.txt /tmp/
		复制ktxt到/tmp文件夹
	#cp file /tmp/file1
		将file文件复制到/tmp目录下并改名为file1
	#cp -r /data/ /tmp/
		复制/data文件夹到/tmp文件夹
	#cp -a file{3,5}.txt
		将file3复制并改名为file5，保留其属性
	#cp /etc/ssh/sshd_config{,.ori}
		将该文件备份为.ori

38.	mv 剪切或重命名（MoVe (rename) files）
	Usage: mv [OPTION]... SOURCE... DIRECTORY
		-i 覆盖前提示 （Interactive: prompt before overwrite）
	#mv /home/cc/test/data/ks/ /tmp/
		将/home/cc/test/data/ks文件夹移动到/tmp下
	#mv file{4,6}.txt
		将file4改名为file6

39.	find 查找（五星级命令）
	Usage: find [-H] [-L] [-P] [path...] [expression]
		[-H] [-L] [-P] 表示如何处理符号链接
		[path...] 为查找路径
		[expression] 包括参数（options）、限定条件（tests）、执行动作（actions）
	-maxdepth 查目录深度（find ./ -maxdepth 1 -type d 为查当前目录下的文件夹）
	-type 文件类型（包括f:file，d:directory，c:character，b:block）
	-name 文件名，双引号引起来可使用通配符，-name前加!为取反
	-mtime 修改时间（+n为n天前，-n为n天内，n为之前第n天）
	-size<文件大小> 查找符合指定的文件大小的文件，+1M为大于1MB，-1M为小于1MB
	-exec 将查询结果执行，以{} \;结尾（-ok比-exec多一个执行过程显示）{}代表的是前面find查找到的内容，所以mv等命令在{}后接目标路径
	-ok 将结果执行，但会需要用户确认，以{} \;结尾
	-a 交集
	-o 并集
	! 取反
	#find /home/cc/test/ -type f -name test.txt
		查找/home/cc/test/及其子目录下名为test.txt的文件
	#find /home/cc/test/ -type f ! -name "*.txt" | xargs rm -f
		删除该目录及子目录下所有不是txt的文件
	#find /home/cc/test/ -type f -name "1.*" -a -name "*.jpg"
	/home/cc/test/data/1.jpg
		查找目录及子目录下名字带1的所有jpg文件
	#mv `find /home/cc -type f -name "1.txt"` /tmp/ks/
		查找/home/cc目录下这个文件并移动到/tmp/ks下
	#find $HOME/. -name "*.txt" -exec cat {} \; > /tmp/ks/all.txt
		将当前用户家目录下所有txt文件内容连起来存在/tmp/ks目录下的all.txt中
	#find /home/cc/ -name "3.txt" -ok rm {} \;
		删除/home/cc目录及子目录下名为3.txt的文件
	#find . -type f -name "*.txt" -ok mv {} dir1/ \;
		将本目录下的所有txt文件移动到dir1目录下，移动每个文件时需要确认

40.	xargs 读取输入数据重新格式化后输出
		-n 格式化几列，默认为所有内容一行输出，如：-n 2位格式化为两列
		-i 将输出一行一行的赋值给{}，让不支持批处理的命令按行执行
	#cat k.txt
	a b c d
	e f g
	h i j k l
	m n
	o
	p
	q r s t
	u v
	w
	x y z
	#cat k.txt | xargs
	a b c d e f g h i j k l m n o p q r s t u v w x y z
		将文本中内容格式化为一行
	#cat k.txt | xargs -n 3
	a b c
	d e f
	g h i
	j k l
	m n o
	p q r
	s t u
	v w x
	y z
		将内容格式化为三列
	#echo "nameXnameXnameXname" | xargs -dX -n2
	name name
	name name
		将内容中X替换为空格，并分两列显示
	#find /home/cc -type f | grep -v ".b" | xargs -n 2
	/home/cc/test/data/1.txt /home/cc/test/data/2.txt
	/home/cc/test/data/3.txt /home/cc/test/data/k.txt
		查找/home/cc及其子目录下所有文件，除文件名中带有“.b”的，其他文件分两列显示

44.	tar 解压缩
	#tar zxvf k.tar.gz
	显示过程
	#tar zcvf dir1_$(date +%F_%H%M%S).tar.gz ./dir1/
	压缩文件

45.	nl 显示行号
	#nl nginx.conf
	显示该文件并标记行号


47.	more 按页显示，回车是一次一行，空格是一次一屏，按b向上会滚一屏（file perusal filter for crt viewing）
	快捷键：
		空格 向下一屏
		回车 向下一行
		b 向上一屏
		= 显示行号
		:f 显示文件名和行号
		/ 搜索
			n 向下搜索
			N 向上搜索
		v 进入vi/vim模式
		! 调用shell命令
		q 退出
	选项：
		-num 设置每页显示num行，例如：more -10 /etc/profile，即每页显示10行，每次翻页也只翻10行
		+num 直接跳转到第num行，例如：more +88 /etc/services，即显示的首行为文件的第num行


47.	less 按页显示，回车是一次一行，空格是一次一屏，按“上”回退一行，b可以回退一屏
	与more的区别：
		1. more会把文件全部加载进内存
		2. less加载一点输出一点，所以less命令更快
		3. 可以用方向键控制翻页
		4. more的所有用法less都支持
	选项：
		-N 显示行号


48.	wc 显示总行数、总字符数等（print newline, word, and byte counts for each file）
		-l 显示总行数
		-L 显示字符数
	[root@testvm2 oldboy]# ps -ef | grep "/sshd" | grep -v grep
	root       1264      1  0 Jul19 ?        00:00:00 /usr/sbin/sshd
	[root@testvm2 oldboy]# ps -ef | grep "/sshd" | grep -v grep | wc -l
	1
		工作中的应用：用0/1表示进程是否活着
	[root@testvm2 oldboy]# netstat -lntup | grep sshd
	tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN      1264/sshd
	tcp        0      0 :::22                       :::*                        LISTEN      1264/sshd
	[root@testvm2 oldboy]# netstat -lntup | grep sshd | wc -l
	2
		同理，看连接22端口的有几个连接来体现端口是否开放

49.	chkconfig 设置开机自启动
		--list 查找列表，查看自启动服务
		--level levels 单独设置选定级别
	#chkconfig --list sshd
	sshd            0:off   1:off   2:on    3:on    4:on    5:on    6:off
	#chkconfig --level 3 sshd on

50.	ln 创建链接（快捷方式）make LiNks between files
	Usage: ln [OPTION]... [-T] TARGET LINK_NAME   (1st form)
	  or:  ln [OPTION]... TARGET                  (2nd form)
	  or:  ln [OPTION]... TARGET... DIRECTORY     (3rd form)
	  or:  ln [OPTION]... -t DIRECTORY TARGET...  (4th form)
	  	-s 创建软连接（Symbolic links），默认不加参数为创建硬链接
	#ln file1 file2
		创建硬链接，前面为源文件名，后面为目标文件名。注意：文件夹不能创建硬链接
	#ln -s /etc/init.d/sshd /etc/rc.d/rc3.d/S55sshd
		创建开机自启sshd软链接，前面为源，后面为目标，数字为目标进程里控制的启动与关闭的顺序

51.	chmod 修改文件权限（CHange file MODe bits）
		Usage: chmod [OPTION]... MODE[,MODE]... FILE...
		数字权限：
			r 	4
			w 	2
			x 	1
			-	0
			rwx 7
			r-x 5
			...
		字母权限：
			u 	给属主设置权限（the User who owns it）
			g 	给属组设置权限（other users in the file’s Group）
			o 	给其他用户设置权限（Other users not in the file’s group）
			a 	给所有用户设置权限（All users）
			+	添加权限（原来的不动，增加）
			-	取消权限（原来的不动，减少）
			=	将权限设置为（原来的清空，设置成等号后面的）
		选项：
			-R 递归（recursive）
	[root@Ks-CentOS-6 ~]# chmod -R 755 /testu
	[root@Ks-CentOS-6 ~]# ll /testu
	total 8
	drwxr-xr-x 2 root root   4096 Jul 31 01:14 test
	-rwxr-xr-x 1 ks   kshome   24 Jul 31 00:34 test.sh
	#将目录下所有文件及子目录设置为755权限，即rwxr-xr-x

	[root@Ks-CentOS-6 ~]# ll /testu/test.sh
	-rwxr-xr-x 1 ks kshome 22 Jul 31 00:04 /testu/test.sh
	#755
	[root@Ks-CentOS-6 ~]# chmod g+w,o-x /testu/test.sh
	#给属组增加w权限，给其他用户取消x权限
	[root@Ks-CentOS-6 ~]# ll /testu/test.sh
	-rwxrwxr-- 1 ks kshome 23 Jul 31 00:21 /testu/test.sh
	#774

52.	stat 查看文件属性（display file or file system status）
		-c 转换格式输出显示
			其包含的格式有：
			%a 以八进制显示权限
			%A 以-rwx显示权限
	[root@Ks-CentOS-6 test]# stat /etc/hosts
	  File: `/etc/hosts'
	  Size: 158             Blocks: 8          IO Block: 4096   regular file
	Device: 803h/2051d      Inode: 39          Links: 2
	Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
	Access: 2018-07-25 00:25:46.305342590 +0800
	Modify: 2018-07-25 00:24:35.808342296 +0800
	Change: 2018-07-25 00:24:35.809342332 +0800
		查看hosts文件属性
	[root@Ks-CentOS-6 0165]# stat -c %a lol
	644
	#使用参数，直接输出该文件的权限并用数字表示

53.	df 查看硬盘使用情况（report file system disk space usage）
		-h 格式化大小
		-i inode使用情况
	#df -h
		将磁盘使用大小格式化成最大单元（M、G、T等）
		磁盘满了（no space left on device），分两种情况，inode满了或block满了
	#df -i
		查看inode使用情况

54.	which 查看二进制命令所在路径（从PATH变量中的路径中查找）
	#which pwd
	/bin/pwd
		查看pwd命令的所在路径

55.	last 查看用户的登录信息（show listing of last logged in users），对应的文件为/var/log/wtmp

56.	lastlog	显示最近登录的用户信息（reports the most recent login of all users or of a given user），对应文件为/var/log/lastlog

57.	dumpe2fs 查看文件系统内部信息（包括元数据）

58.	file 查看文件类型（determine file type），同时也可以查看软链接的目标文件
	[root@Ks-CentOS-6 ~]# file /etc/rc.d/rc3.d/S55sshd
	/etc/rc.d/rc3.d/S55sshd: symbolic link to `../init.d/sshd'
	#查看软链接的源地址
	[root@Ks-CentOS-6 ~]# file /sbin/init
	/sbin/init: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.18, stripped
	#查看系统位数的另一种方法

59.	id 查看用户信息
		Usage: id [OPTION]... [USERNAME]
	[root@Ks-CentOS-6 ~]# id
	uid=0(root) gid=0(root) groups=0(root)
	#查看当前用户信息
	[root@Ks-CentOS-6 ~]# id ks
	uid=500(ks) gid=500(kshome) groups=500(kshome)
	#查看指定用户信息

60.	du 计算文件空间（estimate file space usage），查看文件和目录大小
		-s 查看总大小（Summarsize）
		-h 转换单位（Human readable）
		[root@Ks-CentOS-6 conf]# du -sh /*
		7.7M    /bin
		50M     /boot
		188K    /dev
		29M     /etc
		4.0K    /home
		306M    /lib
		28M     /lib64
		16K     /lost+found
		4.0K    /media
		4.0K    /mnt
		8.0K    /opt
		du: cannot access `/proc/27599/task/27599/fd/4': No such file or directory
		du: cannot access `/proc/27599/task/27599/fdinfo/4': No such file or directory
		du: cannot access `/proc/27599/fd/4': No such file or directory
		du: cannot access `/proc/27599/fdinfo/4': No such file or directory
		0       /proc
		80K     /root
		19M     /sbin
		4.0K    /selinux
		4.0K    /srv
		0       /sys
		56K     /test
		8.0K    /tmp
		1.1G    /usr
		91M     /var

61.	date 日期时间相关命令
		-s 修改时间
		-d 显示偏移时间
		+%F 显示日期,等同于+%Y-%m-%d
		+%w 显示星期几
		+%X 显示时间，等同于+%H:%M:%S，或+%T，X为12小时制，T为24小时制
	[root@Ks-CentOS-6 ~]# date
	Mon Jul 30 12:04:42 CST 2018

	[root@Ks-CentOS-6 ~]# date +%y-%m-%d
	18-07-30
	#按照格式输出日期
	[root@Ks-CentOS-6 ~]# date +%F
	2018-07-30
	#显示日期
	[root@Ks-CentOS-6 ~]# date +%w
	1
	#显示周几
	[root@Ks-CentOS-6 test]# date +%F -d "+2day"
	2018-08-01
	#显示两天后日期
	[root@Ks-CentOS-6 test]# date +%F -d "-1440MIN"
	2018-07-29
	#显示1440分钟以前的日期，1440分就是一天

	应用：
	[root@Ks-CentOS-6 test]# tar zcvf dir1_`date +%F`.tar.gz ./dir1/
	...
	[root@Ks-CentOS-6 test]# ll
	...
	drwxr-xr-x 2 root root 4096 Jul 25 10:18 dir1
	-rw-r--r-- 1 root root  190 Jul 30 12:12 dir1_2018-07-30.tar.gz
	...
	#打包文件，并将日期加入到文件名中

	[root@Ks-CentOS-6 test]# tar zcvf dir1_$(date +%F_%H%M%S).tar.gz ./dir1/
	...
	[root@Ks-CentOS-6 test]# ll
	...
	drwxr-xr-x 2 root root 4096 Jul 25 10:18 dir1
	-rw-r--r-- 1 root root  190 Jul 30 12:15 dir1_2018-07-30_121512.tar.gz
	...
	#打包文件，日期时间加入到文件名中

62.	env 查看所有系统变量

63.	whereis 查找文件
		-b 二进制
	[root@Ks-CentOS-6 test]# whereis -b ls
	ls: /bin/ls

64.	locate 通过名字查找文件（find files by name），只能查找updatedb更新过的内容

65.	readlink 读取软链接的源地址
	[root@Ks-CentOS-6 ~]# readlink /etc/rc.d/rc3.d/S55sshd
	../init.d/sshd

66.	rename 重命名工具（Rename files）
	Usage: rename from to file...
		from 	文件名中需要修改的部分
		to 		from部分替换为的内容
		file 	文件名，可以使用通配符

67.	basename 打印文件名，去掉路径（strip directory and suffix from filenames）
	[root@Ks-CentOS-6 ~]# basename /etc/rc.d/rc3.d/S55sshd
	S55sshd

68.	dirname 打印机文件路径，去掉文件名（strip non-directory suffix from file name）
	[root@Ks-CentOS-6 ~]# dirname /etc/rc.d/rc3.d/S55sshd
	/etc/rc.d/rc3.d

69.	md5sum 计算和校验文件的md5值（compute and check MD5 message digest）,链接文件和源文件md5值时一样的，其他文件的md5值唯一
	Usage: md5sum [OPTION]... [FILE]...
		-t 读取md5值，该选项默认
		-c 检查md5值
	[root@Ks-CentOS-6 md5]# md5sum md5test.txt
	b6583e4031087ba6058d35be87bdcff7  md5test.txt
	#查看问价md5值
	[root@Ks-CentOS-6 md5]# md5sum md5test.txt > md5.log
	#将文件md5值保存到文件中
	[root@Ks-CentOS-6 md5]# md5sum -c md5.log
	md5test.txt: OK
	#通过文件中的md5值匹配文件

70.	usermod 编辑用户信息（modify a user account）
		Usage: usermod [options] LOGIN
	[root@Ks-CentOS-6 test]# usermod -g kshome ks
	#将其加入到kshome用户组

71.	chown 改变文件的属主或属组（CHange file OWNer and group），仅root用户可以用
		Usage: chown [OPTION]... [OWNER][:[GROUP]] FILE...
			其中":"可以用"."替代
		选项：
			-R 递归（recursive）
	[root@Ks-CentOS-6 ~]# chown ks.kshome /testu/test.sh
	#修改文件权限，将文件属主改为ks，文件属组改为kshome

72.	chattr 更改文件扩展属性（CHange file ATTRibutes on a Linux file system）
		Usage: chattr [ -RVf ] [ mode ] files...
		选项：
			-R 递归（recursive）
		格式：
			+ 增加
			- 取消
			= 设置
			[acdeijstuADST]
		属性：
			i 锁定（immutable），不能进行任何操作
			a 只能追加数据（append only），任何用户不能删不能清空，只能追加内容
		建议：
			把/etc/passwd、/etc/shadow、/etc/group、/etc/gshadow、/etc/inittab设置成锁定状态
			chattr +i /etc/passwd /etc/shadow /etc/group /etc/gshadow /etc/inittab
			并将chattr改名，mv chattr changeattributes
	[root@Ks-CentOS-6 test]# chattr +a chattr.txt
	[root@Ks-CentOS-6 test]# lsattr chattr.txt
	-----a-------e- chattr.txt


73.	lsattr 显示文件扩展属性（LiSt file ARRTibutes on a Linux second extended file system）
		Usage: lsattr [ files...  ]
	[root@Ks-CentOS-6 test]# lsattr chattr.txt
	-----a-------e- chattr.txt

74.	chgrp 修改文件属组（CHange GRouP ownership）
		Usage: chgrp [OPTION]... GROUP FILE...
		选项：
			-R 递归（recursive）

75.	crontab 维护用户的crontab文件
		Usage: crontab [-u user] [-l | -r | -e] [-i] [-s]
		选项：
			-l 查看所有定时任务列表（list）
			-e 编辑定时任务（edit）
		crontab其实就是操作/var/spool/cron目录下的用户名为文件名的文件


76.	head 显示文件前n行（output the first part of files）
	Usage: head [OPTION]... [FILE]...
	选项：
		-num 显示前num行，默认不加该选项为-10，即默认显示前10行
		-c num 显示前num个字符
		-n -num 显示除最后num行的内容

77.	tail 显示文件后n行（output the last part of files）
	Usage: tail [OPTION]... [FILE]...
	选项：
		-num 显示后num行，默认不加该选项为-10，即默认显示后10行
		-f 实时查看文件结尾变化，如果文件不存在则终止，也可以使用tailf命令
		-F 实时查看文件结尾变化，如果文件不存在则重试

78.	cut 切割文件（remove sections from each line of files）
	Usage: cut OPTION... [FILE]...
	选项：
		-b 按字节输出
		-c 按字符输出，，1个英文字符占1字节，1个中文字符占2字节
		-d 指定分隔符，默认为TAB锁进为分隔符，输出使用-fnum，其中num为分割后的第num部分。注：只支持单个分隔符
		-f num 输出分割完的第num部分

	[root@Ks-CentOS-6 cut]# cat test.txt
	I'm KevinnoTs, my QQ is 263296!
	[root@Ks-CentOS-6 cut]# cut -b 3 test.txt
	m
	[root@Ks-CentOS-6 cut]# cut -b 3-5 test.txt
	m K
	[root@Ks-CentOS-6 cut]# cut -b -5 test.txt
	I'm K
	[root@Ks-CentOS-6 cut]# cut -b 5- test.txt
	KevinnoTs, my QQ is 263296!
	[root@Ks-CentOS-6 cut]# cut -b 1,5- test.txt
	IKevinnoTs, my QQ is 263296!
	[root@Ks-CentOS-6 cut]# cut -b -5,5- test.txt
	I'm KevinnoTs, my QQ is 263296!
	#-b选项，按字节来切割文件
	#不会重复输出内容

	[root@Ks-CentOS-6 cut]# cat test.txt
	I'm KevinnoTs, my QQ is 263296!
	我是啐啐
	[root@Ks-CentOS-6 cut]# cut -c 3 test.txt
	m
	啐
	#-c选项，按字符切割文件

	[root@Ks-CentOS-6 cut]# head -1 /etc/passwd
	root:x:0:0:root:/root:/bin/bash
	[root@Ks-CentOS-6 cut]# head -1 /etc/passwd | cut -d : -f5
	root
	#使用冒号":"为分割符，取第4部分

	[root@Ks-CentOS-6 cut]# cat fenge
	this    is      tab     line...
	this is space line...
	#测试文本
	[root@Ks-CentOS-6 cut]# cat -T fenge
	this^Iis^Itab^Iline...
	this is space line...
	#通过cat -T显示TAB锁进
	[root@Ks-CentOS-6 cut]# sed -n l fenge
	this\tis\ttab\tline...$
	this is space line...$
	#sed命令显示所有不可打印字符
	[root@Ks-CentOS-6 cut]# cut -f 2-3 fenge
	is      tab
	this is space line...
	#不指定分隔符，默认TAB锁进为分割符，-f命令显示第2到第3部分
	[root@Ks-CentOS-6 cut]# cut -d ' ' -f 2-3 fenge
	this    is      tab     line...
	is space
	#-d选项指定分隔符为空格" "，-f命令显示第2到第3部分

79.	chage 修改密码属性（change user password expiry information）
	Usage: chage [options] LOGIN
	选项：
		-l 列表，即读/etc/shadow文件
		-E 修改账户失效日期，后面接日期，用双引号引起来，格式为YY/MM/DD，如chage -E "2020/12/31"
		-m 几天内不能修改密码，同passwd命令中的选项-n（min）
		-M 原密码过期，即几天内必须修改密码，同passwd命令中的选项-x（max）
		-W 密码还差几天过期时提示该用户修改密码，同passwd命令中的选项-w（warning）
		-I 密码过期后多少天后禁用用户登录，同passwd命令中的选项-i（inactive）

	[root@Ks-CentOS-6 ~]# chage -E "2020/12/31" cc
	#修改账户cc，2020年12月31日失效
	[root@Ks-CentOS-6 ~]# chage -l cc
	Last password change                                    : Jul 30, 2018
	Password expires                                        : Oct 28, 2018
	Password inactive                                       : Nov 27, 2018
	Account expires                                         : Dec 31, 2020
	Minimum number of days between password change          : 3
	Maximum number of days between password change          : 90
	Number of days of warning before password expires       : 15
	#查看账户cc密码属性

80.	free 查看内存信息（Display amount of free and used memory in the system）
	[root@Ks-CentOS-6 ~]# free -m
	             total       used       free     shared    buffers     cached
	Mem:           979        112        867          0          9         28
	-/+ buffers/cache:         74        904
	Swap:         1499          0       1499
	#一般情况下需要加-m参数，意思为按M（兆）显示

81.	dd 转换并复制文件（convert and copy a file）
	[root@Ks-CentOS-6 ~]# dd if=/dev/sda of=mbr.bin bs=512 count=1
	1+0 records in
	1+0 records out
	512 bytes (512 B) copied, 0.000207569 s, 2.5 MB/s
	#将0磁头0磁道1扇区信息备份到当前目录下，命名为mbr.bin

82.	fdisk 磁盘分区工具（Partition table manipulator for Linux）（小于2T的磁盘，大于2T磁盘使用parted）
	详细内容参考磁盘部分详解
	选项：
		-l 查看磁盘信息

83.	sync 强制将buffers写入磁盘（flush file system buffers）
	为避免重启或关机丢数据，最好在重启或关机前将buffers写入磁盘


##################################################

系统目录
	Linux目录一般情况下，可执行程序在/usr/bin，数据文件和帮助在/usr/share，运行时加载的配置文件和服务启动命令在/etc
	FHS (Filesystem Hierarchy Standard)目录层次规范，http://www.pathname.com/fhs/

	#tree -L 1 /
	/
	├── bin -> usr/bin
	├── boot
	├── dev
	├── etc
	├── home
	├── lib -> usr/lib
	├── lib64 -> usr/lib64
	├── media
	├── mnt
	├── opt
	├── proc
	├── root
	├── run
	├── sbin -> usr/sbin
	├── srv
	├── sys
	├── tmp
	├── usr
	└── var
	/bin (Essential user command BINARIES (for use by all users)) 常用二进制命令所在目录
	#whick ls
	alias ls='ls --color=auto'
        /usr/bin/ls
		查找命令目录（别名）
	/boot (Static files of the BOOT loader) Linux内核及系统引导程序所需的文件目录
	/dev (DEVICE files) 设备文件目录
	/etc (Host-specific system configuration) 二进制软件安装包（yum，rpm）的配置文件默认路径，或服务的启动命令存放目录（init.d）
		fstab -->Static information about filesystems (optional) 开机自动挂载设备
		hosts -->Static information about host names (optional) 主机名解析
		inittab -->Configuration file for init (optional) 开机加载的文件
		issue -->Pre-login message and identification file (optional) 登录之前的信息
		motd -->Post-login message of the day file (optional) 登录之后的信息
		profile -->Systemwide initialization file for sh shell logins (optional) 全局环境变量
		bashrc -->全局环境变量（用户的为~/.bashrc）
		resolv.conf -->Resolver configuration file (optional) DNS配置文件
	/home (User home directories (optional)) 普通用户家目录
	/lib (Essential shared libraries and kernel modules) 库文件存放目录
	/media
	/mnt 临时挂载点
	/opt option第三方软件安装位置
	/proc 虚拟文件系统，将内核与进程状态归档为文本文件
	/root root用户家目录
	/run
	/sbin (SUPER BINARY) 超级命令，只有root用户能用的命令
	/srv
	/sys 虚拟目录，内存信息
	/tmp temp临时文件存放目录，垃圾堆
	/usr (Unix Software Resource) 最有可能的解释，个人以为不是user的缩写。用户程序、数据、帮助文件、二进制命令等
	/var (Variable data) 经常变换的文件，系统日志等

重要文件及目录
	/etc/sysconfig/network-scripts/ifcfg-exxxx 设置网卡参数
	/etc/resolv.conf 设置DNS，重启网卡环境会覆盖resolv.conf设置
	/etc/hosts 域名与ip的解析表，相当于本地DNS
	/etc/sysconfig/network 配置主机名（CentOS 6及以前）
	/etc/fstab 硬盘文件系统开机自动挂在文件，即开机要挂载的分区
	/etc/rc.local 用户自己的软件，写入文件，实现开机自启动
	/etc/inittab 用于开机时设置系统级别
	/etc/init.d/ 系统自启动目录，用来存放通过rpm或yum安装的软件的默认启动程序的目录
	/etc/profile 系统全局环境配置文件
	/etc/profile.d/ 系统登陆时加载该目录下的脚本文件
	/etc/issue 记录用户登陆前显示的系统版本信息
	/etc/motd 记录用户登陆后显示的信息
	/etc/redhat-release 显示版本号和信息
	/usr/local/ 用于存放用户自编译安装软件，一般通过源码包安装的软件，相当于Windows中的C:/Program Files
	/usr/src/ 一般用户存放用户上传的源码包
	/var/log/messages 系统日志，一般查看日志文件名语句为#ls -l /var/log/messages*，还可以通过dmesg来查看系统故障信息
	/var/log/secure 查看系统登录信息日志，pop3, ssh, telnet, ftp都会记录，依赖rsyglog服务
	/var/spool/clientmqueue 邮件临时目录
	/proc/version 查看内核版本
	/proc/cpuinfo CPU情况
	/proc/meminfo 内存情况
	/proc/loadavg 负载平均值信息，还可以通过top查看任务管理器，uptime查看开机时间及负载
	/proc/mounts 查看挂载了哪些设备
	/proc/interrupts 查看中断文件


##################################################

通配符：通配符与正则表达式是两个概念，正则表达式主要用于三剑客（其中awk本身就是另一门语言），通配符用于bash命令行
	* 表示零个或多个字符，通配符中表示所有，正则表达式表示个数
		[root@Ks-CentOS-6 test]# ls *.sh
		oldboy.sh  oldgirl.sh  test.sh
			表示查看该目录下所有.sh文件
		[cc@testvm1 ~]$ ls /dev/sda*
		/dev/sda  /dev/sda1  /dev/sda2  /dev/sda3
			显示sda开头任意结尾
	? 匹配任意单个字符
		[root@Ks-CentOS-6 test]# ls ????.sh
		test.sh
			查看任意四个字符的.sh文件
		[cc@testvm1 ~]$ ls /dev/sda?
		/dev/sda1  /dev/sda2  /dev/sda3
			显示sda开头任意一个字符结尾
		[cc@testvm1 ~]$ ls /dev/sd?
		/dev/sda
			显示sd开头任意一个字符结尾
	; 连续不同命令的分隔符
		[root@Ks-CentOS-6 test]# pwd;whoami
		/test
		root
			分别运行两条命令
	# 配置文件的注释
	| 管道
	~ 当前用户的家目录
	- 上一次的目录路径
	$ 变量前需要加的符号
	/ 路径分隔符，单独使用表示根目录
	0<	输入重定向，可简写为<
		#xargs -n 2 </data/k.txt
			从/data/k.txt中输入信息，并以两个为一组显示，仅显示并未修改/data/k.txt中内容
		#tr ' ' '\n' </data/k.txt
			从/data/k.txt中输人信息，并将空格替换为回车，仅显示并未修改/data/k.txt中内容
	0<<	输入追加重定向
	1>	输出重定向，覆盖原内容，可简写为>
		#>/data/k.txt
			清除/data/k.txt中的内容
		#echo 1 2 3 4 >/data/k.txt
			输出1 2 3 4到/data/k.txt中
		#cat >/data/k.txt
			手动输入内容输出到/data/k.txt中，手动输入完成按Ctrl+C结束
	1>>	输出追加重定向，追加到结尾
	2>	错误重定向
		#echo 'hello' 1>/data/a.txt 2>/data/b.txt
			将hello输出到/data/a.txt中，如出现错误，将错误信息输入到/data/b.txt
		#echo 'hello' 1>/data/a.txt 2>&1
		#echo 'hello' &>/data/a.txt
			将hello输出到/data/a.txt中，如出现错误，将错误信息输入到/data/a.txt中
	2>>	错误追加重定向
	[0-9] 匹配范围内的数字
		[cc@testvm1 ~]$ ls /dev/sda[0-9]
		/dev/sda1  /dev/sda2  /dev/sda3
			显示sda开头，0~9结尾
	[abc] 匹配已出的任意字符
		[cc@testvm1 ~]$ ls /dev/sda[135]
		/dev/sda1  /dev/sda3
			显示sda开头1/3/5结尾
	''(单引号) 输出所见即所得，不具有变量置换功能
		[root@Ks-CentOS-6 test]# echo 'date'
		date
		[root@Ks-CentOS-6 test]# echo '$LANG'
		$LANG
	""(双引号) 解析变量后输出，具有变量置换功能，不加引号相当于默认使用双引号
		[root@Ks-CentOS-6 test]# echo "date"
		date
		[root@Ks-CentOS-6 test]# echo "$LANG"
		en_US.UTF-8
	``(反引号) TAB按键上面的按键，反引号中间为命令，会优先执行，等价于$()
		[root@Ks-CentOS-6 test]# echo "`date`"
		Mon Jul 30 05:43:38 CST 2018
		[root@Ks-CentOS-6 test]# echo "$(date)"
		Mon Jul 30 05:43:33 CST 2018
	\(反斜杠) 转义后面单个字符
		e.g:
		[cc@testvm1 ~]$ echo $P

			首先查看$P变量，发现$P为空
		[cc@testvm1 ~]$ P=5
			定义$P，赋值为5
		[cc@testvm1 ~]$ echo $P
		5
			查看变量，复制成功，$P为5
		[cc@testvm1 ~]$ echo "Price is $P"
		Price is 5
			双引号中变量可以被调用
		[cc@testvm1 ~]$ echo 'Price is $P'
		Price is $P
			单引号中变量无效
		[cc@testvm1 ~]$ echo "Price is $$P"
		Price is 1270P
			计划显示Price is 5，在变量前加$，于$P冲突，解析为$$，输出1270
		[cc@testvm1 ~]$ echo "Price is \$$P"
		Price is $5
			加反斜杠直接输出下一个字符，不解析
		[cc@testvm1 ~]$ echo `echo $P`
			反引号中的内容为执行语句，该句相当于直接输出echo $P
	{} 序列
		#echo {1..10}
			输出显示1 2 3...10
		#mkdir -p /data/{x,y}/test
			在/data目录下分别创建x和y两个文件夹，再在x和y中创建test目录
		#echo {1..3}{4..6}
			输出显示14 15 16 24 25 26 34 35 36
		#touch /data/{a..c}.txt
			在/data目录创建a.txt b.txt c.txt
		#cp a.txt{,.bak}
			备份a.txt为a.txt.bak
	! 逻辑非（not）
	&& 当前一个命令执行成功时，执行后一个命令。并且的意思（and）
	|| 当前一个命令执行失败时，执行后一个命令。或者的意思（or）
	. 当前目录/使得文件生效，相当于source/隐藏问价/任意字符（正则表达式）
	.. 上一级目录


##################################################

特殊变量
	#export HISTSIZE=20
		命令行历史记录数量（临时生效，永久生效 ehco 'export HISTSIZE=20' >>/etc/profile，然后source /etc/profile）
	#export HISTFILESIZE=50
		命令行历史文件的记录数量~/.bash_history（临时生效,永久生效 ehco 'export HISTFILESIZE=50' >>/etc/profile，然后source /etc/profile）
	#export TMOUT=10
		10秒无操作登出（临时生效，永久生效 ehco 'export TIME=900' >>/etc/profile，然后source /etc/profile）

	PS1 系统的环境变量
	[root@KS-CENTOS7 ~]# echo $PS1
	[\u@\h \W]\$
	[root@KS-CENTOS7 ~]# set | grep PS1
	PS1='[\u@\h \W]\$ '
	[root@KS-CENTOS7 ~]# PS1='[\t-\u@\h \W]\$'
	[23:00:37-root@KS-CENTOS7 ~]#

	PATH 可执行命令所在路径，用冒号分割
	#export PATH="$PATH:/root"
		注意追加的话要加上之前的变量
	LANG 字符集变量

	OLDPWD 上一次目录
	#env | grep -i oldpwd
	#echo $OLDPWD

查看帮助
	#man pwd
	#pwd --help
	#help pwd
	#info pwd
		查看帮助多页显示的快捷键
		/ 搜索，后面加搜索内容
		n 搜索下一项
		shift + n 搜索上一项
		q 退出


	#tail -l /etc/passwd
		查看用户密码
	#env | egrep "USER|MAIL|PWD|LOGNAME"
		查看环境变量，并过滤其中信息

##################################################

Linux调优
1.	SELinux 是美国国家安全局（NSA）对于强制访问控制的实现，建议关闭
	#cp /etc/selinux/config /etc/selinux/config.ori
		★★★备份文件，制作一个副本★★★
	#vi /etc/selinux/config
	SELINUX=disabled
		方法一：修改配置文件，设置关闭
	#sed -i 's#SELINUX=enforcing#SELINUX=disabled#g' /etc/selinux/config
		方法二：sed替换命令
	#getenforce
	Enforcing
		查看ENLinux状态
	#setenforce
	usage:  setenforce [ Enforcing | Permissive | 1 | 0 ]
		查看setenforce方法
	#setenforce 0
		设置为Permissive（忽略，即弹出提示，但不阻止操作）
	#getenforce
	Permissive
		确认状态为忽略，服务器重启后读取配置文件，状态自动改为disabled

2.	runlevels 运行级别
	CentOS 6及以前为6个运行级别，分别为：
		0 - 关机 halt (Do NOT set initdefault to this)
		1 - 单用户 Single user mode
		2 - 多用户无网络 Multiuser, without NFS (The same as 3, if you do not have networking)
		3 - 完整命令行模式 Full multiuser mode
		4 - 保留（不可用） unused
		5 - 桌面模式 X11
		6 - 重启 reboot (Do NOT set initdefault to this)
	#cat /etc/inittab
		查看帮助，修改默认运行级别修改此文件
	#runlevel
		查看运行级别
	#init 5
		重启后切换到桌面模式
	CentOS 7开始取消用户级别，使用target来控制
		multi-user.target	相当于3级，即命令行模式
		graphical.target	相当于5级，即桌面模式
	#systemctl set-default graphical.target
		重启后切换到桌面模式
	#init 0
		关机，CentOS 7仍然可以使用该命令关机
	#init 6
		重启，CentOS 7仍然可以使用该命令重启

3.	export 自动登出
	#export TMOUT=10
		10秒无操作登出

4.	issue 隐藏Linux版本信息，连接SSH后的欢迎词
	#cat /etc/issue
	#cat /etc/issue.net
	#>/etc/issue
	#>/etc/issue.net

5.	必要系统服务
	1、	sshd		远程
	2、	rsyslog		日志
	3、	network		网络
	4、	crond		定时任务
	5、	sysstat		性能组件（iostat查看CPU使用率、mpstat处理器相关数据、sar收集报告系统信息）

	[root@testvm2 ~]# chkconfig --list | grep "3:on"
	abrt-ccpp       0:off   1:off   2:off   3:on    4:off   5:on    6:off
	abrt-oops       0:off   1:off   2:off   3:on    4:off   5:on    6:off
	abrtd           0:off   1:off   2:off   3:on    4:off   5:on    6:off
	acpid           0:off   1:off   2:on    3:on    4:on    5:on    6:off
	atd             0:off   1:off   2:off   3:on    4:on    5:on    6:off
	auditd          0:off   1:off   2:on    3:on    4:on    5:on    6:off
	blk-availability        0:off   1:on    2:on    3:on    4:on    5:on    6:off
	cpuspeed        0:off   1:on    2:on    3:on    4:on    5:on    6:off
	crond           0:off   1:off   2:on    3:on    4:on    5:on    6:off
	haldaemon       0:off   1:off   2:off   3:on    4:on    5:on    6:off
	ip6tables       0:off   1:off   2:on    3:on    4:on    5:on    6:off
	irqbalance      0:off   1:off   2:off   3:on    4:on    5:on    6:off
	iscsi           0:off   1:off   2:off   3:on    4:on    5:on    6:off
	iscsid          0:off   1:off   2:off   3:on    4:on    5:on    6:off
	kdump           0:off   1:off   2:off   3:on    4:on    5:on    6:off
	lvm2-monitor    0:off   1:on    2:on    3:on    4:on    5:on    6:off
	mdmonitor       0:off   1:off   2:on    3:on    4:on    5:on    6:off
	messagebus      0:off   1:off   2:on    3:on    4:on    5:on    6:off
	netfs           0:off   1:off   2:off   3:on    4:on    5:on    6:off
	network         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	postfix         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	rsyslog         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sshd            0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sysstat         0:off   1:on    2:on    3:on    4:on    5:on    6:off
	udev-post       0:off   1:on    2:on    3:on    4:on    5:on    6:off

	方法一：
	[root@testvm2 ~]# chkconfig --list | grep "3:on" | egrep -v "crond|sshd|network|rsyslog|sysstat" | awk '{print "chkconfig",$1,"off"}'
	chkconfig abrt-ccpp off
	chkconfig abrt-oops off
	chkconfig abrtd off
	chkconfig acpid off
	chkconfig atd off
	chkconfig auditd off
	chkconfig blk-availability off
	chkconfig cpuspeed off
	chkconfig haldaemon off
	chkconfig ip6tables off
	chkconfig irqbalance off
	chkconfig iscsi off
	chkconfig iscsid off
	chkconfig kdump off
	chkconfig lvm2-monitor off
	chkconfig mdmonitor off
	chkconfig messagebus off
	chkconfig netfs off
	chkconfig postfix off
	chkconfig udev-post off

	[root@testvm2 ~]# chkconfig --list | grep "3:on" | egrep -v "crond|sshd|network|rsyslog|sysstat" | awk '{print "chkconfig",$1,"off"}' | bash

	[root@testvm2 ~]# chkconfig --list | grep "3:on"
	crond           0:off   1:off   2:on    3:on    4:on    5:on    6:off
	network         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	rsyslog         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sshd            0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sysstat         0:off   1:on    2:on    3:on    4:on    5:on    6:off

	方法二：
	所有全关，只开有用的。代码与方法一类似



##################################################


Q&A：
1.	克隆后不能ifup网卡
	修改/etc/sysconfig/network-scrpits/ifcfg-eth0
	删除HWADDR和UUID所在行
	清空/etc/udev/rules.d/70-persistent-net.rulse
	reboot



找出七天以前的日志文件并删除
创建环境
	#mkdir -p /app/logs/
	#cd /app/logs/
	#for n in `seq 14`;	do date -s "2018/07/$n"; touch access_www_$(date + %F).log; done
	#ntpdate ntp1.aliyun.com
命令
	#find . -type f -mtime +7 | xargs rm -f
	#find . -type f -mtime +7 -exec rm -f {} \;
	#rm -f `find . -type f -mtime +7`

实时观察日志
环境
	#for n in `seq 100`;do echo $n >> /var/log/messages;sleep 1;done
命令
	#tail -f /var/log/messages
	观察日志尾部的变化（tailf /var/log/messages或tail -F /var/log/messages，-f如果文件删除即停止，-F一直尝试）

显示行号
环境
	#echo stu{01..20} | xargs -n 1 > nginx.conf
命令
	1. #cat -n nginx.conf
	2. #nl nginx.conf （空行不记录行号，显示空行行号加-ba）
	3. #grep -n ".*" nginx.conf
	4. #vim nginx.conf
	   :set nu
	   :set nonu
	5. #awk '{print NR,$0}' nginx.conf
	6. #less -N nginx.conf
	7. #sed = nginx.conf | sed 'N;s/\n/ /'

显示文件有多少行
	#wc -l /etc/services
	其他显示行号的命令后面加" | tail -1",如：#sed = /etc/services | sed 'N;s/\n/ /' | tail -1

开机自启动管理
	1、	编辑/etc/rc.local
		如：增加如下内容
		#sshd service startup scripts by K at 2018.07.23
		/etc/init.d/sshd start
	2、	chkconfig --list sshd
		chkconfig --level 3 sshd off
		chkconfig sshd on




##################################################



快捷键：
esc+.	调用上一条命令的路径
ctrl+a 	光标移动到行首
ctrl+e 	光标移动到行尾
ctrl+c 	终止命令
ctrl+d 	退出当前用户环境（注销）
ctrl+l 	清屏
ctrl+u 	剪切光标到开头的内容
ctrl+k 	剪切光标到结尾的内容
ctrl+r 	搜索已经使用过的命令
ctrl+w 	清楚前一段内容
ctrl+s 	挂起
ctrl+q 	取消挂起
