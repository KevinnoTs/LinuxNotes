环境搭建：

Linux系统安全最小化原则：
	安装系统最小化，选包最小化，安装软件（yum）最小化
	开机启动最小化
	操作命令最小化，如：能用rm -f就不用rm -fr
	登录用户最小化，能用普通用户就不用root
	用户授权最小化，只给用户必须的命令
	文件权限最小化，尽量不要随意创建、更改、删除文件


1. 	硬盘分区选择标准分区，分区格式选择xfs（CentOS 7默认）或ext4（CentOS 6默认）


2. 	CentOS四个组件：Basic、Compatibility libraries、Debugging tools、Development tools


3.	设置网络
	进入系统通过修改ifcfg-eth0配置网络
	[root@Ks-CentOS-6 ~]# vim /etc/sysconfig/network-scripts/ifcfg-eth0
	DEVICE=eth0 			#网卡名字
	TYPE=Ethernet			#网络类型：以太网
	ONBOOT=yes				#是否开机启动网卡
	NM_CONTROLLED=yes		#是否受NetworkManager管理
	BOOTPROTO=none			#获取ip地址方式 --static --dhcp
	IPADDR=192.168.31.156	#IP地址
	NETMASK=255.255.255.0	#子网掩码
	GATEWAY=192.168.31.1	#网关
	DNS1=202.106.0.20		#DNS
	DNS2=114.114.114.114	#备用DNS
	USERCTL=no 				#普通用户是否可以修改
		vim编辑器按i进行编辑
		根据自己需求修改配置文件
		编辑完成按ESC退出编辑并输入:wq退出编辑器
	修改完成，重启网络
	#/etc/init.d/network restart
	#service network restart
	#systemctl restart network.service 		#CentOS 7+版本使用
		以上命令皆为重启所有网卡
	#ifdown eth0 && ifup etho
		只重启eth0这块网卡，&&为前面命令成功后执行后面命令，生产环境尽量只重启修改的网卡，以免断网
	设置完成以后通过ping命令测试联通情况
	#ping www.baidu.com


4.	SecureCRT简单配置如下：
	选项 Options
		会话选项 Terminal：
			仿真 Emulation
				终端 Terminal--Linux；
				回滚行 Scrollback--15000/32000；
		外观 Appearance
			字符编码 Character--UTF-8
			使用Unicode Use Unicode--勾选
			光标样式 Cursor style--下划线 Underline
			颜色 Use color--勾选
			选择颜色 Color--建议绿
			闪烁 Blinking--勾选
		日志 Log file
			文件名 Log file name--session_%S_%Y_%M_%D.log；
			在连接上开始记录日志 Start log upon connect--勾选
			追加到文件 Append to file--选择
		ANSI颜色 ANSI Color


5. 	如果组件没有在安装过程中添加，可进入系统后安装
	[root@Ks-CentOS-6 ~]# yum groupinstall "Base" "Compatibility libraries" "Debugging tools" "Development tools"
	#使用yum groupinstall安装组件
	[root@Ks-CentOS-6 ~]# yum grouplist
	#安装后通过下面命令查询是否安装成功


6.	安装必要软件如：tree、ntpdate、lrzsz、nmap、telnet、sysstat、screen等
	[root@Ks-CentOS-6 ~]# yum install -y tree
	#通过yum命令安装tree
	[root@Ks-CentOS-6 ~]# rpm -qa tree
	tree-1.5.3-3.el6.x86_64
	#安装完成后使用rpm -qa命令检查是否安装
	[root@Ks-CentOS-6 ~]# yum update
	#安装完成后更新所安装软件包


7.	更新服务器时间
	安装时尽可能选择中国所在时区并避免勾选夏时令
	[root@Ks-CentOS-6 ~]# date
	#查看系统日期时间
	[root@Ks-CentOS-6 ~]# ntpdate ntp1.aliyun.com
	#通过阿里云ntp服务器更新系统日期时间，类似的还有ntp2.aliyun.com等，需要yum安装ntpdate


8. 	关闭SELinux
	SELinux 是美国国家安全局（NSA）对于强制访问控制的实现，建议关闭
	[root@Ks-CentOS-6 ~]# cp /etc/selinux/config /etc/selinux/config.ori
	#★★★备份文件，制作一个副本★★★
	[root@Ks-CentOS-6 ~]# vim /etc/selinux/config
	SELINUX=disabled
	#方法一：修改配置文件，设置关闭
	[root@Ks-CentOS-6 ~]# sed -i 's#SELINUX=enforcing#SELINUX=disabled#g' /etc/selinux/config
	#方法二：sed替换命令
	[root@Ks-CentOS-6 ~]# getenforce
	Enforcing
	#查看ENLinux状态
	[root@Ks-CentOS-6 ~]# setenforce
	usage:  setenforce [ Enforcing | Permissive | 1 | 0 ]
	#查看setenforce方法
	[root@Ks-CentOS-6 ~]# setenforce 0
	#设置为Permissive（忽略，即弹出提示，但不阻止操作）
	[root@Ks-CentOS-6 ~]# getenforce
	Permissive
	#确认状态为忽略，服务器重启后读取配置文件，状态自动改为disabled


9.	issue 隐藏Linux版本信息，连接SSH后的欢迎词
	[root@Ks-CentOS-6 ~]# cat /etc/issue
	[root@Ks-CentOS-6 ~]# cat /etc/issue.net
	[root@Ks-CentOS-6 ~]# >/etc/issue
	[root@Ks-CentOS-6 ~]# >/etc/issue.net


10.	关闭非必要自启动系统服务
	全新服务器必要服务只有如下5项（生产环境根据需求调整）：
	1、	sshd		远程
	2、	rsyslog		日志
	3、	network		网络
	4、	crond		定时任务
	5、	sysstat		性能组件（iostat查看CPU使用率、mpstat处理器相关数据、sar收集报告系统信息）
	查看系统中在默认安全级别3中自启动的服务（CentOS 6及以前版本使用chkconfig控制自启动服务）：
	[root@testvm2 ~]# chkconfig --list | grep "3:on"
	abrt-ccpp       0:off   1:off   2:off   3:on    4:off   5:on    6:off
	abrt-oops       0:off   1:off   2:off   3:on    4:off   5:on    6:off
	abrtd           0:off   1:off   2:off   3:on    4:off   5:on    6:off
	acpid           0:off   1:off   2:on    3:on    4:on    5:on    6:off
	atd             0:off   1:off   2:off   3:on    4:on    5:on    6:off
	auditd          0:off   1:off   2:on    3:on    4:on    5:on    6:off
	blk-availability        0:off   1:on    2:on    3:on    4:on    5:on    6:off
	cpuspeed        0:off   1:on    2:on    3:on    4:on    5:on    6:off
	crond           0:off   1:off   2:on    3:on    4:on    5:on    6:off
	haldaemon       0:off   1:off   2:off   3:on    4:on    5:on    6:off
	ip6tables       0:off   1:off   2:on    3:on    4:on    5:on    6:off
	irqbalance      0:off   1:off   2:off   3:on    4:on    5:on    6:off
	iscsi           0:off   1:off   2:off   3:on    4:on    5:on    6:off
	iscsid          0:off   1:off   2:off   3:on    4:on    5:on    6:off
	kdump           0:off   1:off   2:off   3:on    4:on    5:on    6:off
	lvm2-monitor    0:off   1:on    2:on    3:on    4:on    5:on    6:off
	mdmonitor       0:off   1:off   2:on    3:on    4:on    5:on    6:off
	messagebus      0:off   1:off   2:on    3:on    4:on    5:on    6:off
	netfs           0:off   1:off   2:off   3:on    4:on    5:on    6:off
	network         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	postfix         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	rsyslog         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sshd            0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sysstat         0:off   1:on    2:on    3:on    4:on    5:on    6:off
	udev-post       0:off   1:on    2:on    3:on    4:on    5:on    6:off
	关闭非必要自启动系统服务（实现思路：除必要服务，其他关闭）：
	[root@testvm2 ~]# chkconfig --list | grep "3:on" | egrep -v "crond|sshd|network|rsyslog|sysstat" | awk '{print "chkconfig",$1,"off"}'
	chkconfig abrt-ccpp off
	chkconfig abrt-oops off
	chkconfig abrtd off
	chkconfig acpid off
	chkconfig atd off
	chkconfig auditd off
	chkconfig blk-availability off
	chkconfig cpuspeed off
	chkconfig haldaemon off
	chkconfig ip6tables off
	chkconfig irqbalance off
	chkconfig iscsi off
	chkconfig iscsid off
	chkconfig kdump off
	chkconfig lvm2-monitor off
	chkconfig mdmonitor off
	chkconfig messagebus off
	chkconfig netfs off
	chkconfig postfix off
	chkconfig udev-post off
	#筛选默认安全级别3下的非必要（除那5个必要服务外）自启动服务，并通过awk命令取出服务名并补全命令
	[root@testvm2 ~]# chkconfig --list | grep "3:on" | egrep -v "crond|sshd|network|rsyslog|sysstat" | awk '{print "chkconfig",$1,"off"}' | bash
	#通过通道将提取出的命令传给bash命令逐条执行
	[root@testvm2 ~]# chkconfig --list | grep "3:on"
	crond           0:off   1:off   2:on    3:on    4:on    5:on    6:off
	network         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	rsyslog         0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sshd            0:off   1:off   2:on    3:on    4:on    5:on    6:off
	sysstat         0:off   1:on    2:on    3:on    4:on    5:on    6:off
	#再次查看默认安全级别3下启动的服务，结果为5个必要服务，设置完成

	CentOS 7+ 使用systemctl命令控制服务开启、关闭、重启、自启动，思路类似
	下面简单介绍下systemctl命令：
	systemctl 系统服务管理器指令，它实际上将 service 和 chkconfig 这两个命令组合到一起
	Usage: systemctl [OPTIONS...] {COMMAND} ...
		start 启动服务
		stop 关闭服务
		enable 设置开机自启动
		disable 停止开机自启动
		restart 重启服务
		reload 从新加载配置
		mask 冻结服务
		unmask 解冻服务
		status 查看服务状态
	[root@Ks-CentOS-6 ~]# systemctl stop firewalld.service
	#关闭防火墙（CentOS 7+），CentOS 6及以前使用/etc/init.d/iptables stop
	[root@Ks-CentOS-6 ~]# systemctl status firewalld.service
	#查看防火墙进程（CentOS 7+），CentOS 6及以前使用/etc/init.d/iptables status
	[root@Ks-CentOS-6 ~]# systemctl list-unit-files | grep firewalld.service
	#查看防火墙自启状态（CentOS 7+）
	[root@Ks-CentOS-6 ~]# systemctl disable firewalld.service
	Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
	Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.
	#永久关闭防火墙，即关闭自启动（CentOS 7），CentOS 6及以前用chkconfig iptables off
	[root@Ks-CentOS-6 ~]# systemctl restart sshd.service
	#重启ssh服务（CentOS 7+），CentOS 6及以前使用/etc/init.d/sshd restart
	[root@Ks-CentOS-6 ~]# systemctl restart network.service
	#重启网络设置，相当于没有返回值的service network restart
	#因该命令影响所有网卡，生产环境建议使用ifdown ens32 && ifup ens32，这样只针对单独网卡
	[root@Ks-CentOS-6 ~]# systemctl list-units
	#列出当前系统服务的状态
	[root@Ks-CentOS-6 ~]# systemctl list-unit-files
	#列出服务的开机状态
	[root@Ks-CentOS-6 ~]# systemctl status network.service | grep Active:
	#只显示网络设置中的Active那一行信息
	#	loaded				系统服务已经初始化完成，加载过配置
	#	active（running）	正有一个或多个程序正在系统中执行，vsftpd就是这种模式
	#	atcive（exited）	仅执行一次就正常结束的服务，目前并没有任何程序在系统中执行
	#	atcive（waiting）	正在执行当中，不过还在等待其他事件才能继续处理
	#	inactive			服务关闭
	#	enbaled				服务开机启动
	#	disabled			服务开机不自启
	#	static				服务开机启动项不可被管理
	#	failed				系统配置错误


11.	设置登出时间（为了安全起见，非必要）
	[root@Ks-CentOS-6 ~]# export TMOUT=300
	#5分钟（300秒）无操作登出


12.	设置history历史保存记录（因设置了SecureCRT日志保存，为了安全起见建议减少history保存条数，非必要）
	[root@Ks-CentOS-6 ~]# export HISTSIZE=50
	#命令行历史记录数量（临时生效，永久生效 ehco 'export HISTSIZE=50' >>/etc/profile，然后source /etc/profile）
	[root@Ks-CentOS-6 ~]# export HISTFILESIZE=100
	#命令行历史文件的记录数量~/.bash_history（临时生效,永久生效 ehco 'export HISTFILESIZE=100' >>/etc/profile，然后source /etc/profile）


13.	hostname 主机名
	[root@Ks-CentOS-6 ~]# hostname
	#查看主机名
	[root@Ks-CentOS-6 ~]# hostname TestVM1
	#设置当前主机名，立即生效
	[root@Ks-CentOS-6 ~]# hostnamectl set-hostname TestVM1
	#永久设置主机名为TestVM1并立即生效（CentOS 7+）
	[root@Ks-CentOS-6 ~]# vim /etc/sysconfig/network
	#编辑network文件修改hostname行，重启生效（CentOS 6及以前版本）
	[root@Ks-CentOS-6 ~]# vim /etc/hosts
	#编辑hosts文件，加上主机名，便于解析


14.	时间同步
	[root@localhost ~]# echo '# Time sync by KevinnoTs at 2018/08/31' >>/var/spool/cron/root
	[root@localhost ~]# echo '*/5 * * * * /usr/sbin/ntpdate ntp1.aliyun.com >/dev/null 2>&1' >>/var/spool/cron/root
	#使用定时任务，每5分钟同步一次时间
	[root@localhost ~]# crontab -l
	#检查定时任务


15.	加大文件描述符
	进程开启的时候会占用文件描述符，当高并发的时候需要启动多个进程，文件描述符有可能不够用
	[root@localhost ~]# sed -ir 's#^\#\*\s*hard\s*rss\s*10000#&\n\*                -       nofile          65535#' /etc/security/limits.conf
	#加大文件描述符
	[root@localhost ~]# vim /etc/security/limits.conf
	#编辑完成后查看是否成功


16.	内核优化

[root@localhost ~]# cat >>/etc/sysctl.conf<<EOF

# Kernel optimize by KevinnoTs at 2018/08/31
net.ipv4.tcp_fin_timeout = 2
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_max_syn_backlog = 16384
net.ipv4.tcp_max_tw_buckets = 36000
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_max_orphans = 16384
net.ipv4.ip_local_port_range = 4000 65000
net.ipv4.route.gc_timeout = 100
net.core.somaxconn = 16384
net.core.netdev_max_backlog = 16384
#以下参数针对iptables防火墙的优化，防火墙不开会提示，忽略即可
net.nf_conntrack_max = 25000000
net.netfilter.nf_conntrack_tcp_timeout_established = 180
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120
EOF
#修改配置文件
[root@localhost ~]# /sbin/sysctl -p
#执行命令使配置生效


17.	如果需要克隆：
	清空网卡设置中的uuid与mac地址
	删除/etc/udev/rules.d/70-persistent-net.rules文件中关于uuid和mac地址的相关信息
	也可以将">/etc/udev/rules.d/70-persistent-net.rules"添加到/etc/rc.local文件中


18.	创建用户，并sudo提权
	[root@localhost ~]# groupadd kshome
	[root@localhost ~]# tail -1 /etc/group
	kshome:x:500:
	#创建用户组
	[root@localhost ~]# useradd ks -g kshome
	[root@localhost ~]# tail -1 /etc/passwd
	ks:x:500:500::/home/ks:/bin/bash
	#创建用户
	[root@localhost ~]# echo "123456" | passwd --stdin ks
	Changing password for user ks.
	passwd: all authentication tokens updated successfully.
	#设置密码为123456

	[root@localhost ~]# \cp /etc/sudoers{,.bak}
	#备份sudoers文件
	[root@localhost ~]# sed -ir 's#root\s*ALL=(ALL)\s*ALL#&\nks      ALL=(ALL)       NOPASSWD: ALL#'  /etc/sudoers
	#在root行下面加一行ks提权信息，给全部root权限，并且不用输入密码
	[root@localhost ~]# visudo -c
	/etc/sudoers: parsed OK
	#检查sudo文件语法
	[root@localhost ~]# visudo
	#最好使用visudo命令检查sudo文件


18.	基本设置已完成，如果是虚拟机或vps建议制作快照，并克隆为母版机以备以后使用


88.	工作场景优化总结
	1、	不用root用户，使用普通用户通过sudo授权管理
	2、	修改默认SSH端口，禁止root用户远程连接，最好SSH值监听内网IP
	3、	定时自动更新时间
	4、	配置yum源，从国内下载资源
	5、	关闭SELinux及iptables
	6、	加大文件描述符的数量，进程和文件的打开都会消耗文件描述符的数量
	7、	定时自动清理邮件临时目录垃圾文件
	8、	精简开机自启动服务（必须保留项为crond、sshd、network、rsyslog、sysstat）
	9、	内核优化/etc/sysctl.conf
	10、更改字符集位"zh_CN.UTF-8"，支持中文，防止乱码
	11、锁定关键系统文件
		如：/etc/passwd、/etc/shadow、/etc/group、/etc/gshadow、/etc/inittab
		锁定后，将chattr、lsattr改名，并移走
	12、清空/etc/issue、/etc/issue.net，去除系统及内核版本登录前的屏幕显示
	13、清除多余的系统虚拟账号
	14、位grub引导菜单增加密码
	15、禁止主机被ping
	16、打补丁、升级软件


99. root密码丢失找回
	方法一：
		光盘启动，选择 Rescue Installed system
		Choose a Language: English
		Keyboard Type: us
		Setup Networking: No
		Rescue: Continue...OK...OK
		Start shell

		bash-4.1# head -1 /mnt/sysimage/etc/passwd
		root:x:0:0:root:/root:/bin/bash
		#查看/etc/passwd文件，因为系统被挂在到了/mnt/sysimage/，输入全路径查看
		#删除root行的第二列，即"x"，即可删除密码，保存退出
		bash-4.1# head -1 /mnt/sysimage/etc/passwd
		root::0:0:root:/root:/bin/bash
		#再次查看，第二列为空，即删除了密码，设置成功
		bash-4.1# halt
		#关机
		出现halting system后，即可物理关机，再开机

		无密码可登录root，然后输入passwd root，为root设置密码

	方法二：
		按方法一进入Rescue Installed system
		bash-4.1# chroot /mnt/sysimage
		#以root身份登录系统
		sh-4.1# passwd root
		#为root创建新密码
		#注：该模式不能使用命令关机

	方法三：
		重启计算机，当出现 Press any key to enter the menu 时，输入任意键，进入菜单
		输入e，进入编辑模式
		选择：kernel ...
		选中后按e，编辑
		在后面加" /init 1"，修改为单用户模式
		即<TYPE=pc KEYTABLE=us rd_NO_DM rhgb quite /init 1
		按回车确认
		确认修改后按b重启
		进系统同方法一，删除root行第二列，即x，删除root密码
		重启即可无密码登录root

