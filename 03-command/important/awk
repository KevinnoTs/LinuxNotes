awk awk是一种编程语言，用于在linux/unix下对文本和数据进行处理
Usage: 	awk [options] 'script' var=value file(s)
		awk [options] -f scriptfile var=value file(s)
	-F 指定输入分隔符，可以是字符串或正则表达式（还可以使用FS=""）
	$n 当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二个字段。
	$0 为当前行内容
	$NF 为最后一列，$(NF-1)为倒数第二列

e.g：
	#echo -e "Line1 f2 f3 \nLine2 f4 f5" | awk '{print $NF}'
	f3
	f5
		$NF为显示最后一列，默认空格为分隔符，$(NF-1)为倒数第二列

	#echo '12345 54321' | awk -F ' ' '{print $2}'
	54321
		使用-F ' '来确定空格为分隔符，将输入内容分割为两部分，$1代表分隔符前面的部分，$2代表分隔符后面的副本，然后输出$2

	#echo '192.168.137.186' | awk -F '.' '{print $4,$3" "$2,$1}'
	186 137 168 192
		分隔符为.，将原字符串分为4部分，任意调整输出顺序，用逗号连接输出默认分隔符为空格，也可用" "连接

	#echo '12345 54321 23333' | awk 'FS=" " {print $NF}'
	23333
		使用FS=" "来确定空格为分隔符，请注意书写格式。建议使用-F

	#awk 'NR>19&&NR<26' testseq.txt
	20
	21
	22
	23
	24
	25
		NR表示行号，表示输出行号大于19行，小于26行，即20~25行内容

	#awk '{if(NR>19&&NR<26) print $0}' testseq.txt
	20
	21
	22
	23
	24
	25
		意思同上，写法不同，输出20~25行内容，使用if判断，$0为当前行内容