sed 流编辑器，可实现增删改替查等操作
	参数：
	-i 保存到文件
	-n/--quiet/——silent 仅显示script处理后的结果

	命令：
	s 替换
	g 处理文件中的所有匹配
	p 打印行
	d 删除选择的行

	定界符：
	/ : | #

e.g：
	#sed 's/hello/hi/' a.txt
	hi world
		s命令为替换，将a.txt中的hello，替换为hi，不写入文件只输出
	#sed -n 's/hello/hi/p' a.txt
	hi world
		-n与p命令结合，只显示处理的行，不显示其他内容，不写入文件只输出
	#sed 's/hello/hi/' a.txt
	hi world
	this is a test
	hi hello world
	#sed 's/hello/hi/g' a.txt
	hi world
	this is a test
	hi hi world
	#sed -n 's/hello/hi/p' a.txt
	hi world
	hi hello world
	sed -n 's/hello/hi/pg' a.txt
	hi world
	hi hi world
		只s命令替换所有行中第一个匹配，g命令替换所有匹配，-n与p命令搭配只用只输出处理的行，不写入文件只输出
	#data]$ sed 's/hello/hi/2g' a.txt
	hello world
	this is a test
	hello hi world
	hello hi hi hi hi
		/Ng，其中N代表自然数，表示从每一行的第几个匹配项进行处理，例子中为从每行第二个匹配项开始替换所有匹配，不写入文件只输出
	#sed -n '2p' a.txt
		只打印第二行
	#sed '/^$/d' a.txt
		删除空行
	#sed '2d' a.txt
		删除第二行
	#sed '2,$d' a.txt
		删除第二行到结尾行
	#sed -n '$p' a.txt
		只显示结尾行
	#sed '/^[^h]/d' a.txt
		删除所有非h开头的行，不包括空行，但包括空格开头的行
	#echo This is a test line | sed 's/line/~ &!/g'
	This is a test ~ line!
		匹配项用&表示，在匹配项前后增加内容
	#echo This is a test line | sed 's#\w\+#~ &!#g'
	~ This! ~ is! ~ a! ~ test! ~ line!
		\w\+ 表示任意单词均为匹配项
	#echo 'loveable' | sed 's#\(love\)able#\1rs#'
	lovers
		\(..\)为匹配字符串，表示匹配loveable，..为love数字，\1为..中内容
	#echo 'Price is $5' | sed 's/\$\([0-9]\)/\￥\1/'
	Price is ￥5
		\(..\)为匹配字符串，表示匹配$数字，..为[0-9]数字，\1为..中内容
	#echo 'hello world' | sed 's#\(hello\) \(world\)#\2 \1#'
	world hello
		当有两个\(..\)匹配字符串时，第一个存入\1中，第二个存入\2中
	#echo 'hello 23333' | sed 's#\([a-z]\+\) \([0-9]\+\)#\2 \1#'
	23333 hello
		\([a-z]\)+\表示匹配小写单词，\([0-9]\)+\表示匹配数字
	#ifconfig | sed -n '2p' | sed 's#\([a-z]\+\) \([0-9]\+\)#\2#g'
	    192.168.137.188  255.255.255.0  192.168.137.255
		ifconfig读取第二行有关ip地址信息，去除掉前面的单词，只留ip地址，组合多个表达式使用通道“|”
	#sed 's#hello#hi#g;s#this#that#' a.txt
	hi world
	that is a test
		多个表达式也可以在引号内使用分号分开，建议使用通道
	#sed -n 's#\(hello\) #\1  #pg' a.txt
	hello  world
	hello  hello  world
	hello  hello  hello  hello  hello
		从文件中读取，"hello "存进\1，并在所有匹配项后面加空格输出
	#testsed=hello
	#echo hello WORLD | sed "s#$testsed#HELLO#"
	HELLO WORLD
		如果表达式中需要调用变量可使用双引号，纯内容使用单引号
	......