crond定时任务

crond是Linux系统中用来定期执行命令或指定程序任务的一种服务或软件，默认每分钟检查一次

参考资料：http://blog.51cto.com/oldboy/1410555


定时任务命令：
crontab 维护用户的crontab文件
	通过crontab我们可以在固定的间隔时间执行指定的系统指令或script脚本
	时间间隔的单位是分钟，小时，日，月，周及以上的任意组合（注意：日和周不要组合）
	crontab其实就是操作/var/spool/cron目录下的用户名为文件名的文件

	Usage: crontab [-u user] [-l | -r | -e] [-i] [-s]
	选项：
		-l 查看所有定时任务列表（list）
		-e 编辑定时任务（edit）

	[root@Ks-CentOS-6 ~]# cat /etc/crontab
	SHELL=/bin/bash
	PATH=/sbin:/bin:/usr/sbin:/usr/bin
	MAILTO=root
	HOME=/

	# For details see man 4 crontabs

	# Example of job definition:
	# .---------------- minute (0 - 59)
	# |  .------------- hour (0 - 23)
	# |  |  .---------- day of month (1 - 31)
	# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
	# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
	# |  |  |  |  |
	# *  *  *  *  * user-name command to be executed
	# 分 时 日 月 周
	# *表示每的意思
	# -表示范围，即前面时间到后面时间
	# ,表示分割时间段，即前面和后面的时间都
	# /表示每隔后面的数字


定时任务规范：
1.	加注释，为了清晰明了，以防混乱
2.	定时任务或程序最好写到脚本里执行
3.	定时任务路径要规范，即写完整路径，尽量避免使用软链接
4.	执行shell脚本任务时前面加/bin/sh，防止为了为脚本设计权限导致无法完成任务
5.	结尾加>/dev/null 2>&1
		/dev/null 表示黑洞设备或空设备
		2>&1 等价于1>/dev/null 2>/dev/null
		如果不加该命令很容易导致磁盘inode被占满
			CentOS 5 sedmail 临时队列目录 /var/spool/clientmqueue
			CentOS 6 postfix 临时队列目录 /var/spool/postfix/maildrop
			默认定时任务执行时会给root发邮件，如果邮件服务没开，就会把邮件堆到上述目录中，造成大量小文件
6.	在指定用户下执行相关定时任务
		如果是调用了系统环境变量/etc/profile，最好在程序脚本中将用到的环境变量重新export下
7.	调试好后，尽量把DEBUG及命令输出的内容信息屏蔽掉，如果确实需要输出日志，可定向到日志文件里，避免产生系统垃圾
8.	编写定时任务时，先在命令行测试操作，再复制到脚本中
9.	编写完成后，脚本路径尽量复制进定时任务配置里
10.	先在测试环境测试过再部署到正式环境


定时任务调试方法：
1.	增加执行频率调试定时任务
2.	调整系统时间调试定时任务
3.	通过日志输出调试定时任务
4.	注意一些任务命令带来的问题
	如：* * * * * echo "==">>/tmp/lee.log >/dev/null 2>&1，追加进日志和重定向到黑洞设备冲突，去掉一个即可
	再如：命令行格式使用$(date +%F)中，"%"百分号需要转义"\"，写入脚本无需转义
5.	注意环境变量，可以在脚本中写完整路径，或在脚本中exprot PATH=...，重新定义环境变量
6.	通过定时任务日志调试定时任务
	tail -f /var/log/cron
7.	调试脚本用sh -x


定时任务服务相关：
	[root@Ks-CentOS-6 ~]# chkconfig --list crond
	crond           0:off   1:off   2:on    3:on    4:on    5:on    6:off
	#服务自启动状态

	[root@Ks-CentOS-6 ~]# /etc/init.d/crond restart
	Stopping crond:                                            [  OK  ]
	Starting crond:                                            [  OK  ]
	#重启服务

	[root@Ks-CentOS-6 ~]# ps -ef | grep crond | grep -v grep
	root      31335      1  0 03:55 ?        00:00:00 crond
	[root@Ks-CentOS-6 ~]# /etc/init.d/crond status
	crond (pid  31335) is running...
	#服务运行状态

练习：
	将这三个文件：/etc/rc.local /var/spool/cron /etc/hosts打包，备份到/backup目录下
	并删除7天前的备份文件
	[root@Ks-CentOS-6 /]# cat /server/scripts/backup.sh
	#!/bin/sh
	cd / && \
	/bin/tar zcfh /backup/back_$(date +%F).tar.gz etc/rc.local var/spool/cron etc/hosts && \
	/bin/find /backup -type f -name "*.tar.gz" -mtime +7 | xargs rm -f
	#脚本

	[root@Ks-CentOS-6 /]# crontab -l
	#tar /etc/rc.local /var/spool/cron /etc/hosts by KevinnoTs at 18.08.08 01:09
	30 00 * * * /bin/sh /server/scripts/backup.sh >/dev/null 2>&1
	#定时任务，编辑用crontab -e

